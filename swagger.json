{
  "openapi": "3.0.0",
  "info": {
    "title": "OpenBoard API",
    "version": "1.0.0",
    "description": "An easy-to-use and feature-rich API for a public message board."
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieves an array of registered users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Example user list",
                    "value": [
                      {
                        "id": 1,
                        "title": "Hello!",
                        "content": "Is this thing on?",
                        "authorName": "John",
                        "authorId": 1,
                        "createdAt": "2025-08-15T23:43:03.915Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CreateUser"
                  },
                  {
                    "$ref": "#/components/schemas/CreateUserAdmin"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Modify an existing user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was successfully modified"
          },
          "403": {
            "description": "The client is unauthenticated or does not have permission to modify the user"
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a user",
        "responses": {
          "200": {
            "description": "The user was successfully deleted"
          },
          "403": {
            "description": "The client is unauthenticated or does not have permission to delete the user"
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "description": "Numeric id for the message to delete"
        }
      ]
    },
    "/messages": {
      "get": {
        "summary": "Get all messages",
        "description": "Retrieves an array of messages",
        "responses": {
          "200": {
            "description": "A list of messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Example user list",
                    "value": [
                      {
                        "id": 1,
                        "title": "Hello!",
                        "content": "Is this thing on?",
                        "authorName": "John",
                        "authorId": 1,
                        "createdAt": "2025-08-15T23:43:03.915Z"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessage"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message created successfully"
          }
        }
      }
    },
    "/messages/{id}": {
      "delete": {
        "summary": "Soft delete a message",
        "responses": {
          "200": {
            "description": "The message was successfully deleted"
          },
          "403": {
            "description": "The client is unauthenticated or does not have permission to delete the message"
          }
        },
        "security": [
          {
            "bearerToken": []
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "description": "Numeric id for the message to delete"
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "The user's id"
          },
          "username": {
            "type": "string",
            "description": "The user's name"
          },
          "bio": {
            "type": "string",
            "description": "The user's bio",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "description": "The date the user was created"
          }
        },
        "required": ["id", "username", "bio", "createdAt"]
      },
      "CreateUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The user's name"
          },
          "bio": {
            "type": "string",
            "description": "The user's bio"
          }
        },
        "required": ["username"]
      },
      "CreateUserAdmin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The admin account's name"
          },
          "adminToken": {
            "type": "string",
            "description": "A secret admin token"
          }
        },
        "required": ["username", "adminToken"]
      },
      "ModifyUser": {
        "type": "object",
        "properties": {
          "bio": {
            "type": "string",
            "description": "The user's bio"
          }
        },
        "required": []
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "authorName": {
            "type": "string",
            "nullable": true
          },
          "authorId": {
            "type": "number",
            "nullable": true
          },
          "createdAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "authorName",
          "authorId",
          "createdAt"
        ]
      },
      "CreateMessage": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        }
      }
    }
  }
}
